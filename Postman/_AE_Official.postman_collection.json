{
	"info": {
		"name": "_AE_Official",
		"_postman_id": "5b1b73ed-a493-7c86-b129-730e356ef101",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EDDA & Analytics",
			"description": null,
			"item": [
				{
					"name": "Event Engine",
					"description": null,
					"item": [
						{
							"name": "Create Edda Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"ANALYTICSKEYS\", jsonData.key);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"scope\": \"EVENTS\",\n\"client\": 100,\n\"description\": \"some text\"\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/apikeys",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"apikeys"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get Existing Edda Keys",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"type\": \"object\",\n\"properties\": {\n\"scope\": {\n\"type\": \"string\",\n\"enum\": [\"TELEMETRY\", \"EVENTS\"]\n},\n\"key\": {\n\"type\": \"string\"\n},\n\"client\": {\n\"type\": \"integer\",\n\"description\": \"This is required for EVENTS keys, ignored for TELEMETRY keys\"\n},\n\"description\": {\n\"type\": \"string\"\n}\n},\n\"required\": [\"scope\", \"key\"]\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/apikeys",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"apikeys"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Delete Edda Key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"type\": \"object\",\n\"properties\": {\n\"scope\": {\n\"type\": \"string\",\n\"enum\": [\"TELEMETRY\", \"EVENTS\"]\n},\n\"key\": {\n\"type\": \"string\"\n},\n\"client\": {\n\"type\": \"integer\",\n\"description\": \"This is required for EVENTS keys, ignored for TELEMETRY keys\"\n},\n\"description\": {\n\"type\": \"string\"\n}\n},\n\"required\": [\"scope\", \"key\"]\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/{{EDDA_REST_ANALYTICSAPIKEY}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"{{EDDA_REST_ANALYTICSAPIKEY}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Send 1 Edda Event",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_ANALYTICSAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"SIMPLE.EVENT\",\n  \"timestamp\":\"2017-06-20T11:07:10.898Z\",\n  \"values\": {\n    \"id\": 123,\n    \"desc\": \"Reboot Server\",\n    \"hostname\":\"server1.domain\",\n    \"approval\": false,\n    \"status\":\"running\"\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/events",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"events"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Send 1 Edda Event copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_ANALYTICSAPIKEY}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"TICKET.DEFINITION.2\",\n  \"timestamp\":\"2017-06-20T11:07:10.898Z\",\n  \"values\": {\n    \"id\": 12345946,\n    \"desc\": \"Reboot Server\",\n    \"hostname\":\"server1.domain\",\n    \"approval\": false,\n    \"status\":\"running\"\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/events",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"events"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Send Multiple Edda Events",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_ANALYTICSAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  [\n{\n  \"type\": \"SIMPLE.EVENT\",\n  \"timestamp\":\"2017-06-20T11:07:10.898Z\",\n  \"values\": {\n    \"count\": 3,\n    \"message\": \"restart my server\",\n    \"success\": true\n  }\n},\n{\n  \"type\": \"SIMPLE.EVENT\",\n  \"timestamp\":\"2017-06-20T11:07:10.898Z\",\n  \"values\": {\n    \"count\": 3,\n    \"message\": \"reboot my server\",\n    \"success\": true\n  }\n},\n{\n  \"type\": \"SIMPLE.EVENT\",\n  \"timestamp\":\"2017-06-20T11:07:10.898Z\",\n  \"values\": {\n    \"count\": 3,\n    \"message\": \"do something else\",\n    \"success\": true\n  }\n}\n]\n "
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/events",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"events"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Analytics",
					"description": null,
					"item": [
						{
							"name": "Get Charts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_configuration\": {\n    \"primary_entity\": \"JOB\",\n    \"time_frame\": {\n      \"between\": {\n        \"start\": \"2015-01-01\",\n        \"end\": \"2017-12-31\"\n      }\n    },\n    \"query_tree_root\": {\n      \"leaves\": [\n        {\n          \"query_criterion\": {\n            \"generic\": {\n              \"operator\": \"CONTAINS\",\n              \"expressions\": [\n                {\n                  \"label\": \"NAME\",\n                  \"value\": \"JOB\"\n                }\n              ],\n              \"attribute_value\": \"AGENT_NAME\"\n            }\n          }\n        }\n      ],\n      \"branches\": [\n      ],\n      \"query_tree_root_operator\": \"ANY\"\n    }\n  },\n  \"chart_configuration\": {\n    \"type\": \"TABLE\",\n    \"event\": \"END_TIME\",\n    \"sort_attribute\": \"END_TIME\",\n    \"sort_order\": \"ASCENDING\",\n    \"offset\": 0,\n    \"limit\": 1000\n  },\n  \"time_zone\": \"UTC\",\n  \"timeout\": 10000\n}\""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/charts",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"charts"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get List of Dashboards",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"DASHBOARDID\", jsonData.content[0].share_id);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_configuration\": {\n    \"primary_entity\": \"JOB\",\n    \"time_frame\": {\n      \"between\": {\n        \"start\": \"2015-01-01\",\n        \"end\": \"2017-12-31\"\n      }\n    },\n    \"query_tree_root\": {\n      \"leaves\": [\n        {\n          \"query_criterion\": {\n            \"generic\": {\n              \"operator\": \"CONTAINS\",\n              \"expressions\": [\n                {\n                  \"label\": \"NAME\",\n                  \"value\": \"JOB\"\n                }\n              ],\n              \"attribute_value\": \"AGENT_NAME\"\n            }\n          }\n        }\n      ],\n      \"branches\": [\n      ],\n      \"query_tree_root_operator\": \"ANY\"\n    }\n  },\n  \"chart_configuration\": {\n    \"type\": \"TABLE\",\n    \"event\": \"END_TIME\",\n    \"sort_attribute\": \"END_TIME\",\n    \"sort_order\": \"ASCENDING\",\n    \"offset\": 0,\n    \"limit\": 1000\n  },\n  \"time_zone\": \"UTC\",\n  \"timeout\": 10000\n}\""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/shared_dashboards",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"shared_dashboards"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Find Shared Dashboards By Client",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"DASHBOARDID\", jsonData.content[0].share_id);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_configuration\": {\n    \"primary_entity\": \"JOB\",\n    \"time_frame\": {\n      \"between\": {\n        \"start\": \"2015-01-01\",\n        \"end\": \"2017-12-31\"\n      }\n    },\n    \"query_tree_root\": {\n      \"leaves\": [\n        {\n          \"query_criterion\": {\n            \"generic\": {\n              \"operator\": \"CONTAINS\",\n              \"expressions\": [\n                {\n                  \"label\": \"NAME\",\n                  \"value\": \"JOB\"\n                }\n              ],\n              \"attribute_value\": \"AGENT_NAME\"\n            }\n          }\n        }\n      ],\n      \"branches\": [\n      ],\n      \"query_tree_root_operator\": \"ANY\"\n    }\n  },\n  \"chart_configuration\": {\n    \"type\": \"TABLE\",\n    \"event\": \"END_TIME\",\n    \"sort_attribute\": \"END_TIME\",\n    \"sort_order\": \"ASCENDING\",\n    \"offset\": 0,\n    \"limit\": 1000\n  },\n  \"time_zone\": \"UTC\",\n  \"timeout\": 10000\n}\""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/shared_dashboards/search/findByClient?client=100",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"shared_dashboards",
										"search",
										"findByClient"
									],
									"query": [
										{
											"key": "client",
											"value": "100",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Find Shared Dashboards By Client and Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"DASHBOARDID\", jsonData.content[0].share_id);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_configuration\": {\n    \"primary_entity\": \"JOB\",\n    \"time_frame\": {\n      \"between\": {\n        \"start\": \"2015-01-01\",\n        \"end\": \"2017-12-31\"\n      }\n    },\n    \"query_tree_root\": {\n      \"leaves\": [\n        {\n          \"query_criterion\": {\n            \"generic\": {\n              \"operator\": \"CONTAINS\",\n              \"expressions\": [\n                {\n                  \"label\": \"NAME\",\n                  \"value\": \"JOB\"\n                }\n              ],\n              \"attribute_value\": \"AGENT_NAME\"\n            }\n          }\n        }\n      ],\n      \"branches\": [\n      ],\n      \"query_tree_root_operator\": \"ANY\"\n    }\n  },\n  \"chart_configuration\": {\n    \"type\": \"TABLE\",\n    \"event\": \"END_TIME\",\n    \"sort_attribute\": \"END_TIME\",\n    \"sort_order\": \"ASCENDING\",\n    \"offset\": 0,\n    \"limit\": 1000\n  },\n  \"time_zone\": \"UTC\",\n  \"timeout\": 10000\n}\""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/shared_dashboards/search/findByClientAndName?client=100&name=DASH.OVERVIEW.WORKFLOWS",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"shared_dashboards",
										"search",
										"findByClientAndName"
									],
									"query": [
										{
											"key": "client",
											"value": "100",
											"equals": true
										},
										{
											"key": "name",
											"value": "DASH.OVERVIEW.WORKFLOWS",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Find Shared Dashboards By Client and Name and Created By",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"DASHBOARDID\", jsonData.content[0].share_id);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_configuration\": {\n    \"primary_entity\": \"JOB\",\n    \"time_frame\": {\n      \"between\": {\n        \"start\": \"2015-01-01\",\n        \"end\": \"2017-12-31\"\n      }\n    },\n    \"query_tree_root\": {\n      \"leaves\": [\n        {\n          \"query_criterion\": {\n            \"generic\": {\n              \"operator\": \"CONTAINS\",\n              \"expressions\": [\n                {\n                  \"label\": \"NAME\",\n                  \"value\": \"JOB\"\n                }\n              ],\n              \"attribute_value\": \"AGENT_NAME\"\n            }\n          }\n        }\n      ],\n      \"branches\": [\n      ],\n      \"query_tree_root_operator\": \"ANY\"\n    }\n  },\n  \"chart_configuration\": {\n    \"type\": \"TABLE\",\n    \"event\": \"END_TIME\",\n    \"sort_attribute\": \"END_TIME\",\n    \"sort_order\": \"ASCENDING\",\n    \"offset\": 0,\n    \"limit\": 1000\n  },\n  \"time_zone\": \"UTC\",\n  \"timeout\": 10000\n}\""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/shared_dashboards/search/findByClientAndName?client=100&name=DASH.OVERVIEW.WORKFLOWS&createdBy=ARA/ARA",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"shared_dashboards",
										"search",
										"findByClientAndName"
									],
									"query": [
										{
											"key": "client",
											"value": "100",
											"equals": true
										},
										{
											"key": "name",
											"value": "DASH.OVERVIEW.WORKFLOWS",
											"equals": true
										},
										{
											"key": "createdBy",
											"value": "ARA/ARA",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get Shared Dashboard Content",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_configuration\": {\n    \"primary_entity\": \"JOB\",\n    \"time_frame\": {\n      \"between\": {\n        \"start\": \"2015-01-01\",\n        \"end\": \"2017-12-31\"\n      }\n    },\n    \"query_tree_root\": {\n      \"leaves\": [\n        {\n          \"query_criterion\": {\n            \"generic\": {\n              \"operator\": \"CONTAINS\",\n              \"expressions\": [\n                {\n                  \"label\": \"NAME\",\n                  \"value\": \"JOB\"\n                }\n              ],\n              \"attribute_value\": \"AGENT_NAME\"\n            }\n          }\n        }\n      ],\n      \"branches\": [\n      ],\n      \"query_tree_root_operator\": \"ANY\"\n    }\n  },\n  \"chart_configuration\": {\n    \"type\": \"TABLE\",\n    \"event\": \"END_TIME\",\n    \"sort_attribute\": \"END_TIME\",\n    \"sort_order\": \"ASCENDING\",\n    \"offset\": 0,\n    \"limit\": 1000\n  },\n  \"time_zone\": \"UTC\",\n  \"timeout\": 10000\n}\""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/shared_dashboards/{{DASHBOARDID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"shared_dashboards",
										"{{DASHBOARDID}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Delete Shared Dashboard",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{EDDA_REST_SYSTEMAPIKEY}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"query_configuration\": {\n    \"primary_entity\": \"JOB\",\n    \"time_frame\": {\n      \"between\": {\n        \"start\": \"2015-01-01\",\n        \"end\": \"2017-12-31\"\n      }\n    },\n    \"query_tree_root\": {\n      \"leaves\": [\n        {\n          \"query_criterion\": {\n            \"generic\": {\n              \"operator\": \"CONTAINS\",\n              \"expressions\": [\n                {\n                  \"label\": \"NAME\",\n                  \"value\": \"JOB\"\n                }\n              ],\n              \"attribute_value\": \"AGENT_NAME\"\n            }\n          }\n        }\n      ],\n      \"branches\": [\n      ],\n      \"query_tree_root_operator\": \"ANY\"\n    }\n  },\n  \"chart_configuration\": {\n    \"type\": \"TABLE\",\n    \"event\": \"END_TIME\",\n    \"sort_attribute\": \"END_TIME\",\n    \"sort_order\": \"ASCENDING\",\n    \"offset\": 0,\n    \"limit\": 1000\n  },\n  \"time_zone\": \"UTC\",\n  \"timeout\": 10000\n}\""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{EDDA_REST_PORT}}/{{EDDA_REST_URL}}/{{EDDA_REST_VERSION}}/shared_dashboards/{{DASHBOARDID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{EDDA_REST_PORT}}",
									"path": [
										"{{EDDA_REST_URL}}",
										"{{EDDA_REST_VERSION}}",
										"shared_dashboards",
										"{{DASHBOARDID}}"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "AutomationEngine",
			"description": null,
			"item": [
				{
					"name": "Executions",
					"description": null,
					"item": [
						{
							"name": "Execute Object (Prompt)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"RUNID\", jsonData.run_id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"object_name\": \"PCK.AUTOMIC_PROVISIONING.PUB.SCRIPT.TARGETS_PROCESS\",\n  \"inputs\":\n  {\n    \"TEXT1#\": \"passed text\",\n    \"NUMBER1#\": \"1234\",\n    \"COMBOBOX1#\": \"Installation\",\n    \"RADIOGROUP1#\": \"Windows\",\n    \"CHECKBOX1#\": [\"Low\", \"Critical\", \"Irrelevant\"],\n    \"DATETIME1#\": \"170730\",\n    \"TEXT100#\": \"another passed text\",\n    \"NUMBER100#\": \"7777\"\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/executions",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"executions"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Execute Object (Prompt) copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"RUNID\", jsonData.run_id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"object_name\": \"PCK.AUTOMIC_PROVISIONING.PUB.SCRIPT.TARGETS_PROCESS\",\n  \"inputs\":\n  {\n    \"TEXT1#\": \"passed text\",\n    \"NUMBER1#\": \"1234\",\n    \"COMBOBOX1#\": \"Installation\",\n    \"RADIOGROUP1#\": \"Windows\",\n    \"CHECKBOX1#\": [\"Low\", \"Critical\", \"Irrelevant\"],\n    \"DATETIME1#\": \"170730\",\n    \"TEXT100#\": \"another passed text\",\n    \"NUMBER100#\": \"7777\"\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/executions",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"executions"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Execute Object (No Prompt)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"RUNID\", jsonData.run_id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"object_name\": \"PCK.AUTOMIC_PROVISIONING.PUB.SCRIPT.TARGETS_PROCESS\"\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/executions",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"executions"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Execute Object (get status)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/executions/{{RUNID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"executions",
										"{{RUNID}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Execute Object (restart object)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"restart\"\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/executions/{{RUNID}}/status",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"executions",
										"{{RUNID}}",
										"status"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Execute Object (cancel object)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"cancel\",\n  \"cancel\": {\n    \"recursive\": true\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/executions/{{RUNID}}/status",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"executions",
										"{{RUNID}}",
										"status"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Execute Object (get children)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"action\": \"cancel\",\n  \"cancel\": {\n    \"recursive\": true\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/executions/{{RUNID}}/children",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"executions",
										"{{RUNID}}",
										"children"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Search",
					"description": null,
					"item": [
						{
							"name": "Search for Objects (Template)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": [{\n        \"filter_identifier\": \"object_name\",\n        \"object_name\": \"*\"\n    }\n    ,{\n        \"filter_identifier\": \"object_type\",\n        \"object_types\": [\"JOBS\",\"JOBP\"]\n    }\n    ,{\n        \"filter_identifier\": \"process\",\n        \"query\": \"echo\"\n    }    \n    ,{\n        \"filter_identifier\": \"archive_key\",\n        \"query\": \"*\"\n    } \n    ,{\n        \"filter_identifier\": \"title\",\n        \"query\": \"DB\"\n    }\n    ,{\n        \"filter_identifier\": \"location\",\n        \"location\": \"\\\\PACKAGES\",\n        \"include_subfolders\": true,\n        \"include_links\": true\n    }\n    ],\n    \"max_results\": 100\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/search",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"search"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search for Objects (Name, Title, Location, Arch Key)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": [{\n        \"filter_identifier\": \"object_name\",\n        \"object_name\": \"*\"\n    }\n    ,{\n        \"filter_identifier\": \"title\",\n        \"query\": \"DB\"\n    }\n    ,{\n        \"filter_identifier\": \"archive_key\",\n        \"query\": \"*\"\n    } \n    ,{\n        \"filter_identifier\": \"location\",\n        \"location\": \"\\\\PACKAGES\",\n        \"include_subfolders\": true,\n        \"include_links\": true\n    }\n    ],\n    \"max_results\": 100\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/search",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"search"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search for Objects (Types)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": [{\n        \"filter_identifier\": \"object_name\",\n        \"object_name\": \"*\"\n    }\n    ,{\n        \"filter_identifier\": \"object_type\",\n        \"object_types\": [\"JOBS\",\"JOBP\"]\n    }\n    ],\n    \"max_results\": 100\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/search",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"search"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search for Objects (Process)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": [{\n        \"filter_identifier\": \"object_name\",\n        \"object_name\": \"*\"\n    }\n    ,{\n        \"filter_identifier\": \"process\",\n        \"query\": \"echo \"\n    }    \n    ],\n    \"max_results\": 100\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/search",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"search"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search for Objects (Creation Time)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": [{\n        \"filter_identifier\": \"object_name\",\n        \"object_name\": \"*\"\n    }\n    ,{\n        \"filter_identifier\": \"object_type\",\n        \"object_types\": [\"JOBS\",\"JOBP\"]\n    }\n    ,{\n        \"filter_identifier\": \"time_frame\",\n        \"from\": 1407898505000,\n       \"until\": 1607898505000,\n        \"type\": \"created\"\n    }\n    ,{\n        \"filter_identifier\": \"location\",\n        \"location\": \"\\\\PACKAGES\",\n        \"include_subfolders\": true,\n        \"include_links\": true\n    }\n    ],\n    \"max_results\": 3\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/search",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"search"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Search for VARA with Content",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{AE_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{AE_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBL0FSQTpBUkE="
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"filters\": [{\n        \"filter_identifier\": \"object_name\",\n        \"object_name\": \"*\"\n    }\n    ,{\n        \"filter_identifier\": \"object_type\",\n        \"object_types\": [\"VARA\"]\n    }\n    ,{\n        \"filter_identifier\": \"location\",\n        \"location\": \"\\\\PACKAGES\",\n        \"include_subfolders\": true,\n        \"include_links\": true\n    }    \n    ,{\n        \"filter_identifier\": \"variable_key\",\n        \"query\": \"BOND\"\n    }\n    ,{\n        \"filter_identifier\": \"variable_value\",\n        \"query\": \"Automic\",\n        \"all_columns\" : false,\n        \"type\" : \"ANY\"\n    }\n    ],\n    \"max_results\": 30,\n    \"sort_columns\": {\n      \"name\":true,\n      \"title\":true\n    }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{AE_REST_PORT}}/{{AE_REST_APIURL}}/{{AE_REST_APIVERSION}}/{{AE_REST_CLIENT}}/search",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{AE_REST_PORT}}",
									"path": [
										"{{AE_REST_APIURL}}",
										"{{AE_REST_APIVERSION}}",
										"{{AE_REST_CLIENT}}",
										"search"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Demo Specific",
					"description": null,
					"item": [
						{
							"name": "Execute Workflow  (Prompt)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"RUNID\", jsonData.run_id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "ARA",
											"type": "string"
										},
										{
											"key": "username",
											"value": "ARA/ARA",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"object_name\": \"JOBP.PROCESS.1\",\n  \"inputs\":\n  {\n    \"IPADR#\": \"127.0.0.1\",\n    \"PORTNUMBER#\": 2213,\n    \"OPERATION#\": \"Reboot\",\n    \"VERBOSE#\": \"Level 2\",\n    \"NOTIFICATION#\": [\"Attach Log\",\"Get Notification\"],\n    \"EMAIL#\": \"bsp@automic.com\"\n  }\n}"
								},
								"url": {
									"raw": "http://34.203.181.44:8088/ae/api/v1/100/executions",
									"protocol": "http",
									"host": [
										"34",
										"203",
										"181",
										"44"
									],
									"port": "8088",
									"path": [
										"ae",
										"api",
										"v1",
										"100",
										"executions"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "ReleaseAutomation",
			"description": null,
			"item": [
				{
					"name": "Applications",
					"description": null,
					"item": [
						{
							"name": "Get Applications",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"APPID\", jsonData.data[0].id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications?max_results=100000",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications"
									],
									"query": [
										{
											"key": "max_results",
											"value": "100000",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Duplicate Application",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"APPID\", jsonData.data[0].id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"target_application\": \"ARA_Duplicate\",\n  \"target_folder\": \"DEFAULT\",\n  \"target_owner\": \"100/ARA/ARA\"\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications/{{APPID}}/duplicate",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications",
										"{{APPID}}",
										"duplicate"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Modify Application (add description)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"APPID\", jsonData.data[0].id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"DemoApp\",\n  \"archived\": false,\n\n  \"owner\":\n    {\n      \"name\": \"100/ARA/ARA\"\n    },\n  \"folder\":\n   {\n   \"name\": \"DEFAULT\"\n   },\n  \"description\" : \"My Description of the app\"\n  \n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications/{{APPID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications",
										"{{APPID}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Modify Application (add dynamic variables)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"APPID\", jsonData.data[0].id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"DemoApp\",\n  \"archived\": false,\n\n  \"owner\":\n    {\n      \"name\": \"100/ARA/ARA\"\n    },\n  \"folder\":\n   {\n   \"name\": \"DEFAULT\"\n   },\n  \"description\" : \"My Description of the app\",\n  \n   \"dynamic\": {\n      \"/server/url\": \"http://myserver.at\",\n      \"/server/port\": \"80\"\n   }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications/{{APPID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications",
										"{{APPID}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get Application Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"COMPID\", jsonData.components.data[0].id);",
											"postman.setGlobalVariable(\"COMPNAME\", jsonData.components.data[0].name);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications/{{APPID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications",
										"{{APPID}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get Application Component Info",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications/{{APPID}}/components{{COMPID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications",
										"{{APPID}}",
										"components{{COMPID}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Modify Application Component",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{COMPNAME}}\",\n  \"archived\": false,\n\n  \"owner\":\n    {\n      \"name\": \"100/ARA/ARA\"\n    },\n  \"folder\":\n   {\n     \"name\": \"DEFAULT\"\n   },\n\n   \"dynamic\": {\n      \"/server/url\": \"http://myserver.at\",\n      \"/server/port\": \"80\"\n   }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications/{{APPID}}/components/{{COMPID}}",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications",
										"{{APPID}}",
										"components",
										"{{COMPID}}"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get Application Profiles",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/applications/{{APPID}}/profiles",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"applications",
										"{{APPID}}",
										"profiles"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Executions",
					"description": null,
					"item": [
						{
							"name": "Get Executions",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/executions?max_results=100000",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"executions"
									],
									"query": [
										{
											"key": "max_results",
											"value": "100000",
											"equals": true
										}
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Trigger Deployment (execution)",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"application\": \"POSApp\",\n  \"workflow\": \"DeployToPOS\",\n  \"package\": \"v1.0\",\n  \"deployment_profile\": \"v_8.0.14\",\n  \"needs_manual_start\": false,\n  \"install_mode\": \"overwriteExisting\"\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/executions",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"executions"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Packages",
					"description": null,
					"item": [
						{
							"name": "Get Packages",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QUJDOjlCMjBDMjk3NUNGNEM5RTA2NDgxMzgxRUExRDUzNjcwMDlBQTkyRTU3QzUyNjAwQw=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/packages",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"packages"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Packagee - Change State",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"status\":\"State2\"\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/packages/13039",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"packages",
										"13039"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Profiles",
					"description": null,
					"item": [
						{
							"name": "Get Profiles",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/profiles",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"profiles"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Create profile",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"v_8.0.14\",\n\n  \"application\": {\n    \"id\": 4666,\n    \"name\": \"POSApp\"\n  },\n  \"environment\": {\n    \"id\": 4458,\n    \"name\": \"Darden_Prod\"\n  },\n  \"owner\": {\n    \"id\": 204,\n    \"name\": \"100/ARA/ARA\",\n    \"type\": \"User\"\n  },\n  \"folder\": {\n    \"id\": 534,\n    \"name\": \"DEMOAPP\"\n  },\n  \"login\": {\n    \"id\": 535,\n    \"name\": \"Sample\"\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/profiles",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"profiles"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Get Profile Mappings",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"v_8.0.14\",\n\n  \"application\": {\n    \"id\": 548,\n    \"name\": \"DemoApp\"\n  },\n  \"environment\": {\n    \"id\": 4458,\n    \"name\": \"Darden_Prod\"\n  },\n  \"owner\": {\n    \"id\": 204,\n    \"name\": \"100/ARA/ARA\",\n    \"type\": \"User\"\n  },\n  \"folder\": {\n    \"id\": 534,\n    \"name\": \"DEMOAPP\"\n  },\n  \"login\": {\n    \"id\": 535,\n    \"name\": \"Sample\"\n  }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/profiles/4643/target_mappings",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"profiles",
										"4643",
										"target_mappings"
									]
								},
								"description": null
							},
							"response": []
						},
						{
							"name": "Set Profile Mappings",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[{\n     \"name\": \"terminal\",\n     \"targets\": [{\n         \"name\": \"1201\"\n       },\n       {\n         \"name\": \"1202\"\n       },\n        {\n         \"name\": \"1203\"\n       }\n     ]\n   }\n ]"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/profiles/4820/target_mappings",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"profiles",
										"4820",
										"target_mappings"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Environments",
					"description": null,
					"item": [
						{
							"name": "Get Environments",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/environments",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"environments"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Logins",
					"description": null,
					"item": [
						{
							"name": "Get Logins",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/logins",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"logins"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Targets",
					"description": null,
					"item": [
						{
							"name": "Create Deployment Target",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{ARA_LOGIN_DEPT}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "{{ARA_PWD}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"type": "any"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic MTAwL0FSQS9BUkE6QVJB"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"1220\",\n    \"status\": \"Active\",\n    \"agent\": \"WIN01\",\n    \"description\": \"Restaurant 1211\",\n    \"owner\": {\n        \"name\": \"100/ARA/ARA\"\n    },\n    \"folder\": {\n        \"name\": \"DEFAULT\"\n    },\n    \"custom_type\": {\n        \"name\": \"Generic\",\n        \"version\": \"1.0\"\n    }\n}"
								},
								"url": {
									"raw": "{{URLROOT}}://{{HOSTNAME}}:{{ARA_REST_PORT}}/{{ARA_REST_API_URL}}/{{ARA_REST_APIVERSION}}/deployment_targets",
									"protocol": "{{URLROOT}}",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{ARA_REST_PORT}}",
									"path": [
										"{{ARA_REST_API_URL}}",
										"{{ARA_REST_APIVERSION}}",
										"deployment_targets"
									]
								},
								"description": null
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "UnofficialRestAPI",
			"description": "",
			"item": [
				{
					"name": "Auth Tests",
					"item": [
						{
							"name": "help - Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/auth",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"help",
										"v1",
										"auth"
									]
								},
								"description": "Authentication\nlogin\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication-login-OK",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Body matches string\"] = responseBody.has(\"token\");",
											"tests[\"Body matches string\"] = responseBody.has(\"expdate\");",
											"",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"TOKEN\", jsonData.token);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/login/v1/auth?login=ARA&pwd=ARA&connection=AEPROD&client=100",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"login",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "login",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "pwd",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "connection",
											"value": "AEPROD",
											"equals": true
										},
										{
											"key": "client",
											"value": "100",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogin\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication-login-OK (basic auth)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Body matches string\"] = responseBody.has(\"token\");",
											"tests[\"Body matches string\"] = responseBody.has(\"expdate\");",
											"",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"TOKEN\", jsonData.token);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBOkFSQQ=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/login/v1/auth?connection=AEPROD&client=100",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"login",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "connection",
											"value": "AEPROD",
											"equals": true
										},
										{
											"key": "client",
											"value": "100",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogin\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication-login-Fail (basic auth)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"error\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic QVJBOnNkZmFzZGY="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/login/v1/auth?login=ARA&pwd=ARA&connection=AEPROD&client=100",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"login",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "login",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "pwd",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "connection",
											"value": "AEPROD",
											"equals": true
										},
										{
											"key": "client",
											"value": "100",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogin\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication - show - v1",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"token is returned\"] = responseBody.has(\"token\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"at least one entry\"] = jsonData.count > 0;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/show/v1/auth",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"show",
										"v1",
										"auth"
									]
								},
								"description": "Authentication\nlogin\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication-login-KO",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"error is returned\"] = responseBody.has(\"error\");",
											"tests[\"Access denied\"] = responseBody.has(\"Access denied\");"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/login/v1/auth?login=ARA&pwd=arara&connection=AEPROD&client=100",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"login",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "login",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "pwd",
											"value": "arara",
											"equals": true
										},
										{
											"key": "connection",
											"value": "AEPROD",
											"equals": true
										},
										{
											"key": "client",
											"value": "100",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogin\nKO"
							},
							"response": []
						},
						{
							"name": "Authentication - logout - OK - scope=all",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"status is success\"] = responseBody.has(\"removed\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/logout/v1/auth?scope=all",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"logout",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "scope",
											"value": "all",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogout\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication-login-OK 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Body matches string\"] = responseBody.has(\"token\");",
											"tests[\"Body matches string\"] = responseBody.has(\"expdate\");",
											"",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"TOKEN\", jsonData.token);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/login/v1/auth?login=ARA&pwd=ARA&connection=AEPROD&client=100",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"login",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "login",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "pwd",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "connection",
											"value": "AEPROD",
											"equals": true
										},
										{
											"key": "client",
											"value": "100",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogin\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication-logout-OK",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"status is success\"] = responseBody.has(\"removed\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/logout/v1/auth?token={{TOKEN}}",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"logout",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogout\nOK"
							},
							"response": []
						},
						{
							"name": "Authentication-logout-KO",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Body matches string\"] = responseBody.has(\"error\");",
											"tests[\"Body matches string\"] = responseBody.has(\"invalid\");"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/logout/v1/auth?token=notoken",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"logout",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "token",
											"value": "notoken",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogout\nKO"
							},
							"response": []
						},
						{
							"name": "Authentication - misc - v1 - encrypt",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"status\"] = responseBody.has(\"status\");",
											"tests[\"is OK\"] = responseBody.has(\"success\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"encrypted value returned\"] = jsonData.encrypted !== \"\";",
											"//tests[\"encrypted value has value\"] = jsonData.encrypted.length !== 0;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/encrypt/v1/Misc?key=Un1ver$e",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"encrypt",
										"v1",
										"Misc"
									],
									"query": [
										{
											"key": "key",
											"value": "Un1ver$e",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Authentication - misc - v1 - decrypt",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"status\"] = responseBody.has(\"status\");",
											"tests[\"is OK\"] = responseBody.has(\"success\");",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"decrypted value returned\"] = jsonData.decrypted !== \"\";",
											"//tests[\"decrypted value has value\"] = jsonData.decrypted.length !== 0;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/awa/decrypt/v1/Misc?key=--1057F4AAE06DF40F92",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"awa",
										"decrypt",
										"v1",
										"Misc"
									],
									"query": [
										{
											"key": "key",
											"value": "--1057F4AAE06DF40F92",
											"equals": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Authentication - misc - v1 - encrypt (internal)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"status\"] = responseBody.has(\"status\");",
											"tests[\"is OK\"] = responseBody.has(\"success\");",
											"tests[\"Password encrypted as proper value\"] = responseBody.has(\"--1011A5E9D4669E1503\");",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"encrypted value returned\"] = jsonData.encrypted !== \"\";",
											"//tests[\"encrypted value has value\"] = jsonData.encrypted.length !== 0;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/awa/encrypt/v1/Misc?key=Un1ver$e&internal=",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"awa",
										"encrypt",
										"v1",
										"Misc"
									],
									"query": [
										{
											"key": "key",
											"value": "Un1ver$e",
											"equals": true
										},
										{
											"key": "internal",
											"value": "",
											"equals": false
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Authentication - misc - v1 - decrypt (internal)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"status\"] = responseBody.has(\"status\");",
											"tests[\"is OK\"] = responseBody.has(\"success\");",
											"tests[\"Password decrypted as proper value\"] = responseBody.has(\"Un1ver$e\");",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"decrypted value returned\"] = jsonData.decrypted !== \"\";",
											"//tests[\"decrypted value has value\"] = jsonData.decrypted.length !== 0;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/awa/decrypt/v1/Misc?key=--1011A5E9D4669E1503&internal=",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"awa",
										"decrypt",
										"v1",
										"Misc"
									],
									"query": [
										{
											"key": "key",
											"value": "--1011A5E9D4669E1503",
											"equals": true
										},
										{
											"key": "internal",
											"value": "",
											"equals": false
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Authentication-login-OK copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"returns status\"] = responseBody.has(\"status\");",
											"tests[\"status is success\"] = responseBody.has(\"success\");",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Body matches string\"] = responseBody.has(\"token\");",
											"tests[\"Body matches string\"] = responseBody.has(\"expdate\");",
											"",
											"",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"postman.setGlobalVariable(\"TOKEN\", jsonData.token);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic YnJlbjp1bml2ZXJzZQ=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/awa/login/v1/auth?login=ARA&pwd=ARA&connection=AEPROD&client=100",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"awa",
										"login",
										"v1",
										"auth"
									],
									"query": [
										{
											"key": "login",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "pwd",
											"value": "ARA",
											"equals": true
										},
										{
											"key": "connection",
											"value": "AEPROD",
											"equals": true
										},
										{
											"key": "client",
											"value": "100",
											"equals": true
										}
									]
								},
								"description": "Authentication\nlogin\nOK"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "GET Functional Tests",
					"item": [
						{
							"name": "Activities",
							"description": null,
							"item": [
								{
									"name": "nooperation - Activities - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Status is returned\"] = responseBody.has(\"status\");",
													"tests[\"Status is error\"] = responseBody.has(\"error\");",
													"tests[\"function not found\"] = responseBody.has(\"error occured\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/nooperation/v1/All",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"nooperation",
												"v1",
												"All"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - v1 - with filters: name & type",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities?filters=[name:REST*,type:JOBS|JOBP]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "filters",
													"value": "[name:REST*,type:JOBS|JOBP]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - v1 - with filters: status",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities?filters=[status:1900]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "filters",
													"value": "[status:1900]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - v1 - with filters: host",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities?filters=[host:*WIN*]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "filters",
													"value": "[host:*WIN*]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - v1 - no param DELAY",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											]
										}
									},
									"response": []
								},
								{
									"name": "deactivate - Activities - v1 - simple execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"error\");",
													"tests[\"deactivated task\"] = responseBody.has(\"deactivate\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "TOKEN",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/deactivate/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"deactivate",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution (one off)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - v1 - no param DELAY",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											]
										}
									},
									"response": []
								},
								{
									"name": "rerun - Activities - v1 - simple execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"tests[\"has refrunid\"] = responseBody.has(\"refrunid\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/rerun/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"rerun",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - jsch execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.JSCH.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.JSCH.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "quit - Activities - v1 - jsch quit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"task has quit\"] = responseBody.has(\"task quit done\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/quit/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"quit",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - run a long job",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "cancel - Activities - v1 - cancel job",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"is cancelled\"] = responseBody.has(\"task cancelled\");",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/cancel/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"cancel",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - run a workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"var newRUNID = jsonData.runid + 1;",
													"postman.setGlobalVariable(\"RUNID\", newRUNID);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.ABORT.JOBP.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.ABORT.JOBP.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - v1 - no param DELAY",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											]
										}
									},
									"response": []
								},
								{
									"name": "unblock - Activities - v1 - unblock the task in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"task unblocked\"] = responseBody.has(\"task unblocked\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/unblock/v1/Activities?runid={{RUNID}}&type=JOBS",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"unblock",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												},
												{
													"key": "type",
													"value": "JOBS",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - run a long job",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "suspend - Activities - v1 - suspend the task in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"error\");",
													"tests[\"task suspended\"] = responseBody.has(\"message\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/suspend/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"suspend",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - run a job",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "show - Activities - v1 - show an activity (REP)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"type\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/awa/show/v1/Activities?runid={{RUNID}}&type=REP",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"awa",
												"show",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												},
												{
													"key": "type",
													"value": "REP",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - run a workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"var newRUNID = jsonData.runid + 2;",
													"postman.setGlobalVariable(\"RUNID\", newRUNID);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.ABORT.JOBP.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.ABORT.JOBP.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "addbreak - Activities - v1 - add breakpoint in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"task breakpoint added\"] = responseBody.has(\"Task breakpoint added\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/addbreak/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"addbreak",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "addbreak - Activities - v1 - add breakpoint TO workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"task breakpoint added\"] = responseBody.has(\"Task breakpoint added\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/api/awa/addjobpbreak/v1/Activities?jobp=TEST.RUN.FLOW.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"api",
												"awa",
												"addjobpbreak",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "jobp",
													"value": "TEST.RUN.FLOW.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "addbreak - Activities - v1 - delete breakpoint FROM workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"task breakpoint added\"] = responseBody.has(\"Task breakpoint added\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/api/awa/deljobpbreak/v1/Activities?jobp=TEST.RUN.FLOW.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"api",
												"awa",
												"deljobpbreak",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "jobp",
													"value": "TEST.RUN.FLOW.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delbreak - Activities - v1 - remove breakpoint in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Task breakpoint removed\"] = responseBody.has(\"Task breakpoint removed\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delbreak/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delbreak",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "addskip - Activities - v1 - add skip request in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Task deactivated\"] = responseBody.has(\"Task deactivated\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/addskip/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"addskip",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delskip - Activities - v1 - del skip request in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Task reactivated\"] = responseBody.has(\"Task reactivated\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delskip/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delskip",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "go - Activities - v1 - go immediatly in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Task Go Now\"] = responseBody.has(\"Task Go Now\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/go/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"go",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "go - Activities - v1 - go immediatly in workflow copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Task Go Now\"] = responseBody.has(\"Task Go Now\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/showprompts/v1/Activities?runid=1091004",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"showprompts",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "1091004",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "childstats - Activities - v1 - ",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"data returned\"] = responseBody.has(\"data\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/childstats/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"childstats",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "activatorstats - Activities - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"data returned\"] = responseBody.has(\"data\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/activatorstats/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"activatorstats",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delbreak - Activities - v1 - remove breakpoint in workflow copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Task breakpoint removed\"] = responseBody.has(\"Task breakpoint removed\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/addjobpbreak/v1/Activities?runid=1577006&tsknum=2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"addjobpbreak",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "1577006",
													"equals": true
												},
												{
													"key": "tsknum",
													"value": "2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delbreak - Activities - v1 - add breakpoint in workflow",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Task breakpoint removed\"] = responseBody.has(\"Task breakpoint removed\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/deljobpbreak/v1/Activities?runid=1577006&tsknum=2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"deljobpbreak",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "1577006",
													"equals": true
												},
												{
													"key": "tsknum",
													"value": "2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution (manual release)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=JOBS.WIN.RUN.1&manualrelease=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBS.WIN.RUN.1",
													"equals": true
												},
												{
													"key": "manualrelease",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution (alias)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=JOBS.WIN.RUN.1&alias=MY_NEW_JOB",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBS.WIN.RUN.1",
													"equals": true
												},
												{
													"key": "alias",
													"value": "MY_NEW_JOB",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution (queue)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=JOBS.WIN.RUN.1&queue=QUEUE.TEST.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBS.WIN.RUN.1",
													"equals": true
												},
												{
													"key": "queue",
													"value": "QUEUE.TEST.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution (queue, alias, manual release)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=JOBS.WIN.RUN.1&queue=QUEUE.TEST.1&alias=MY_JOB&manualrelease=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBS.WIN.RUN.1",
													"equals": true
												},
												{
													"key": "queue",
													"value": "QUEUE.TEST.1",
													"equals": true
												},
												{
													"key": "alias",
													"value": "MY_JOB",
													"equals": true
												},
												{
													"key": "manualrelease",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution (alias) wrong format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=JOBS.WIN.RUN.1&alias=\"MY NEW JOB\"",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBS.WIN.RUN.1",
													"equals": true
												},
												{
													"key": "alias",
													"value": "\"MY NEW JOB\"",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution (queue) wrong format",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=JOBS.WIN.RUN.1&queue=\"QUEUE TEST.1\"",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBS.WIN.RUN.1",
													"equals": true
												},
												{
													"key": "queue",
													"value": "\"QUEUE TEST.1\"",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Agents",
							"item": [
								{
									"name": "show - Agents - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"active\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/show/v1/Agents?name=WIN01",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"show",
												"v1",
												"Agents"
											],
											"query": [
												{
													"key": "name",
													"value": "WIN01",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "quit - Agents - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/quit/v1/Agents?name=WIN01",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"quit",
												"v1",
												"Agents"
											],
											"query": [
												{
													"key": "name",
													"value": "WIN01",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "start - Agents - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/start/v1/Agents?name=WIN01",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"start",
												"v1",
												"Agents"
											],
											"query": [
												{
													"key": "name",
													"value": "WIN01",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "disconnect - Agents - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/disconnect/v1/Agents?name=WIN01",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"disconnect",
												"v1",
												"Agents"
											],
											"query": [
												{
													"key": "name",
													"value": "WIN01",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "All",
							"item": [
								{
									"name": "nooperation - All - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Status is returned\"] = responseBody.has(\"status\");",
													"tests[\"Status is error\"] = responseBody.has(\"error\");",
													"tests[\"function not found\"] = responseBody.has(\"error occured\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/nooperation/v1/Activities",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"nooperation",
												"v1",
												"Activities"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - name and no filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=*",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "*",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with complex filters on type",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=REST*&filters=[type:JOBP|JOBS]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[type:JOBP|JOBS]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with simple filters on type",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=REST*&filters=[type:JOBS]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[type:JOBS]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with complex filters on type and reversetype",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=REST*&filters=[reversetype,type:JOBP|JOBS]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[reversetype,type:JOBP|JOBS]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with complex filters on type and date created",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=REST*&filters=[reversetype,type:JOBP|JOBS,created:LAST10YEARS]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[reversetype,type:JOBP|JOBS,created:LAST10YEARS]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with complex filters on type and date modified",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=REST*&filters=[reversetype,type:JOBP|JOBS,modified:LAST10YEARS]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[reversetype,type:JOBP|JOBS,modified:LAST10YEARS]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with complex filters on type and date used",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count >= 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=REST*&filters=[reversetype,type:JOBP|JOBS,used:LAST10YEARS]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[reversetype,type:JOBP|JOBS,used:LAST10YEARS]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with complex filters (type, date, title)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=REST*&text=*TITLE*&search_text_in_title=&filters=[type:JOBP|JOBS,created:LAST10YEARS]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "text",
													"value": "*TITLE*",
													"equals": true
												},
												{
													"key": "search_text_in_title",
													"value": "",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[type:JOBP|JOBS,created:LAST10YEARS]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "export - All - v1 - no commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/export/v1/All?name=*&filters=[folder:.*REST.*]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"export",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[folder:.*REST.*]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "export - All - v1 - exportwithreferences no commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
													"tests[\"status\"] = responseBody.has(\"status\");",
													"tests[\"success\"] = responseBody.has(\"success\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/export/v1/All?name=REST.AUTO.TESTS.JOBP.1&method=exportwithreferences",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"export",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.TESTS.JOBP.1",
													"equals": true
												},
												{
													"key": "method",
													"value": "exportwithreferences",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "runtimes - All - v1 - (get last runtimes)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
													"tests[\"status\"] = responseBody.has(\"status\");",
													"tests[\"success\"] = responseBody.has(\"success\");",
													"tests[\"estimated runtimes\"] = responseBody.has(\"estimatedruntimes\");",
													"tests[\"real runtimes\"] = responseBody.has(\"lastruntimes\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/runtimes/v1/All?name=REST.AUTO.RUNNABLE.JOBS.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"runtimes",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "output - All - v1 - (get registered output)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
													"tests[\"status\"] = responseBody.has(\"status\");",
													"tests[\"success\"] = responseBody.has(\"success\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Your test name\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/output/v1/All?runid=1365527",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"output",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "runid",
													"value": "1365527",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "export - All - v1 - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
													"",
													"var jsonObject = xml2Json(responseBody);",
													"tests[\"client version is present\"] = responseBody.has(\"clientvers\");",
													"tests[\"at least one title is present\"] = responseBody.has(\"Title\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/export/v1/All?name=REST*&filters=[folder:.*REST.*]&commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"export",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST*",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[folder:.*REST.*]",
													"equals": true
												},
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "lastrun - All - v1 - (get last runid)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
													"tests[\"status\"] = responseBody.has(\"status\");",
													"tests[\"success\"] = responseBody.has(\"success\");",
													"tests[\"runid\"] = responseBody.has(\"runid\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/lastrun/v1/All?name=REST.AUTO.RUNNABLE.JOBS.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"lastrun",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "export - All - v1 - showreferences",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
													"tests[\"status\"] = responseBody.has(\"status\");",
													"tests[\"success\"] = responseBody.has(\"success\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Your test name\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/export/v1/All?name=REST.AUTO.TESTS.JOBP.1&method=showreferences",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"export",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.TESTS.JOBP.1",
													"equals": true
												},
												{
													"key": "method",
													"value": "showreferences",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - All - v2 - with complex filters (type, date, title, folder)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"at least 1 object found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?name=*&text=*TITLE*&search_text_in_title=&filters=[type:JOBP|JOBS,created:LAST10YEARS,folder",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "*",
													"equals": true
												},
												{
													"key": "text",
													"value": "*TITLE*",
													"equals": true
												},
												{
													"key": "search_text_in_title",
													"value": "",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[type:JOBP|JOBS,created:LAST10YEARS,folder",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "export - All - v1 - exportwithreferences with commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
													"tests[\"status\"] = responseBody.has(\"status\");",
													"tests[\"error\"] = responseBody.has(\"error\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/export/v1/All?name=REST.AUTO.TESTS.JOBP.1&method=exportwithreferences&commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"export",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.TESTS.JOBP.1",
													"equals": true
												},
												{
													"key": "method",
													"value": "exportwithreferences",
													"equals": true
												},
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "AutoForecasts",
							"item": [
								{
									"name": "forecast  - Activities- v1 - no method (error)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/forecast/v1/activities",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"forecast",
												"v1",
												"activities"
											]
										}
									},
									"response": []
								},
								{
									"name": "forecast  - Activities- v1 - recalculate forecast",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/forecast/v1/activities?method=recalculate",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"forecast",
												"v1",
												"activities"
											],
											"query": [
												{
													"key": "method",
													"value": "recalculate",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "forecast  - Activities- v1 - query forecast",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Your test name\"] = jsonData.count >= 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/forecast/v1/activities?method=query",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"forecast",
												"v1",
												"activities"
											],
											"query": [
												{
													"key": "method",
													"value": "query",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "forecast  - Activities- v1 - query forecast with filters",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"count\"] = jsonData.count >= 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/forecast/v1/activities?method=query&filters=[type:JOBS,name:*]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"forecast",
												"v1",
												"activities"
											],
											"query": [
												{
													"key": "method",
													"value": "query",
													"equals": true
												},
												{
													"key": "filters",
													"value": "[type:JOBS,name:*]",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Calendars",
							"item": [
								{
									"name": "list - Calendars - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/list/v1/Calendars",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"list",
												"v1",
												"Calendars"
											]
										}
									},
									"response": []
								},
								{
									"name": "show - Calendars - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Calendars?name=CALE.REST.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Calendars"
											],
											"query": [
												{
													"key": "name",
													"value": "CALE.REST.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Changes",
							"item": [
								{
									"name": "nooperation - Changes - v1 - (fail)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/noopt/v1/changes?filters=[title:OLD.*,date:LAST1DAY]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"noopt",
												"v1",
												"changes"
											],
											"query": [
												{
													"key": "filters",
													"value": "[title:OLD.*,date:LAST1DAY]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Changes - v1 - with filters",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/changes?filters=[title:OLD.*,date:LAST1DAY]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"changes"
											],
											"query": [
												{
													"key": "filters",
													"value": "[title:OLD.*,date:LAST1DAY]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Changes - v1 - no filters",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/changes",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"changes"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Changes - v1 - with filters and params",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"1 record is found\"] = jsonData.count === 1;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/changes?filters=[title:.*,date:LAST1YEAR]&maxresults=1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"changes"
											],
											"query": [
												{
													"key": "filters",
													"value": "[title:.*,date:LAST1YEAR]",
													"equals": true
												},
												{
													"key": "maxresults",
													"value": "1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Changes - v1 - with filters and incorrect params",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"1 record is found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/changes?filters=[title:OLD.*,date:LAST1DAY]&maxresults=as",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"changes"
											],
											"query": [
												{
													"key": "filters",
													"value": "[title:OLD.*,date:LAST1DAY]",
													"equals": true
												},
												{
													"key": "maxresults",
													"value": "as",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Conn",
							"item": [
								{
									"name": "display - Conn - v1 - name (REST)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Conn?name=REST.AUTO.REST.CONN.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Conn"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.REST.CONN.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Conn - v1 - name (DB)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Conn?name=REST.AUTO.DB.CONN.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Conn"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.DB.CONN.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Conn - v1 - name (SAP)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Conn?name=REST.AUTO.SAP.CONN.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Conn"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.SAP.CONN.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Client",
							"item": [
								{
									"name": "nooperation - Client - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Status is returned\"] = responseBody.has(\"status\");",
													"tests[\"Status is error\"] = responseBody.has(\"error\");",
													"tests[\"function not found\"] = responseBody.has(\"error occured\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/nooperation/v1/Client",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"nooperation",
												"v1",
												"Client"
											]
										}
									},
									"response": []
								},
								{
									"name": "stop - Client - v1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"client is stopped\"] = responseBody.has(\"stopped\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/stop/v1/Client",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"stop",
												"v1",
												"Client"
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show client stopped",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.data[0].active === false;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showclients",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showclients",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "go - Client - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"client is stopped\"] = responseBody.has(\"started\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/go/v1/Client",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"go",
												"v1",
												"Client"
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show client started",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.data[0].active === true;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showclients",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showclients",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Docu",
							"item": [
								{
									"name": "show - Docu - v1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"returns success\"] = responseBody.has(\"success\");",
													"tests[\"returns txtdocu\"] = responseBody.has(\"txtdocu\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/show/v1/Docu?name=REST.API.JOBS.WIN.DOCU.XML.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"show",
												"v1",
												"Docu"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.API.JOBS.WIN.DOCU.XML.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Engine",
							"item": [
								{
									"name": "nooperation - Engine - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Status is returned\"] = responseBody.has(\"status\");",
													"tests[\"Status is error\"] = responseBody.has(\"error\");",
													"tests[\"function not found\"] = responseBody.has(\"error occured\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/nooperation/v1/Engine",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"nooperation",
												"v1",
												"Engine"
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show client",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showclients",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showclients",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show db",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showdb",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showdb",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show hosts",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showhosts",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showhosts",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show hostgroups",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"is hostgroup\"] = responseBody.has(\"mode\");",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=hostgroups",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "hostgroups",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show users",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"is hostgroup\"] = responseBody.has(\"name\");",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showusers",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showusers",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show engine",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"is hostgroup\"] = responseBody.has(\"name\");",
													"tests[\"is hostgroup\"] = responseBody.has(\"hostname\");",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showengine",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showengine",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show messages",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showmessages",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showmessages",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"is client\"] = responseBody.has(\"client\");",
													"tests[\"has active records\"] = responseBody.has(\"active\");",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showusage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showusage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - v1 - show messages",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"check Client status\"] = jsonData.count >= 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												""
											]
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=showmessages",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "showmessages",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Jobf",
							"item": [
								{
									"name": "display - Jobf - v1 - name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Jobf?name=REST.AUTO.JOBF.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Jobf"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.JOBF.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Jobp",
							"item": [
								{
									"name": "display - Jobs - v1 - name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Jobp?name=JOBP.NEW.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBP.NEW.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Jobs",
							"description": null,
							"item": [
								{
									"name": "nooperation - Jobs - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Status is returned\"] = responseBody.has(\"status\");",
													"tests[\"Status is error\"] = responseBody.has(\"error\");",
													"tests[\"function not found\"] = responseBody.has(\"error occured\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/nooperation/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"nooperation",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Jobs - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Jobs - v1 - name and no filter",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Jobs?name=*",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "name",
													"value": "*",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Jobs - v1 - name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Jobs?name=MY.REST.JOB.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "name",
													"value": "MY.REST.JOB.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Jobs (RA) - v1 - name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Jobs?name=MY.CIT.JOB.2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "name",
													"value": "MY.CIT.JOB.2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Jobs - v1 - version",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"returns data\"] = responseBody.has(\"data\");",
													"tests[\"returns objects\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Jobs?name=REST.API.JOBS.WIN.RUN.1&v=3",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.API.JOBS.WIN.RUN.1",
													"equals": true
												},
												{
													"key": "v",
													"value": "3",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Notifications",
							"item": [
								{
									"name": "show - Notifications  - v1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"returns success\"] = responseBody.has(\"success\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/show/v1/Notifications",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"show",
												"v1",
												"Notifications"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "OneOfs",
							"item": [
								{
									"name": "Auth OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setGlobalVariable(\"TOKEN\", jsonData.token);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/login/v1/auth?login=ARA&pwd=ARA&connection=AEPROD&client=100",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"login",
												"v1",
												"auth"
											],
											"query": [
												{
													"key": "login",
													"value": "ARA",
													"equals": true
												},
												{
													"key": "pwd",
													"value": "ARA",
													"equals": true
												},
												{
													"key": "connection",
													"value": "AEPROD",
													"equals": true
												},
												{
													"key": "client",
													"value": "100",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Run Workflow",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=EXPTR.EXPTR.JOBP.GENER_FLUX_METRICS_IMO&token={{TOKEN}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "EXPTR.EXPTR.JOBP.GENER_FLUX_METRICS_IMO",
													"equals": true
												},
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - v1 - simple execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=JOBP.STD.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "JOBP.STD.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Authentication-login-OK",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Body matches string\"] = responseBody.has(\"token\");",
													"tests[\"Body matches string\"] = responseBody.has(\"expdate\");",
													"",
													"",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"postman.setGlobalVariable(\"TOKEN\", jsonData.token);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/login/v1/auth?login=ARA&pwd=ARA&connection=AEPROD&client=100",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"login",
												"v1",
												"auth"
											],
											"query": [
												{
													"key": "login",
													"value": "ARA",
													"equals": true
												},
												{
													"key": "pwd",
													"value": "ARA",
													"equals": true
												},
												{
													"key": "connection",
													"value": "AEPROD",
													"equals": true
												},
												{
													"key": "client",
													"value": "100",
													"equals": true
												}
											]
										},
										"description": "Authentication\nlogin\nOK"
									},
									"response": []
								},
								{
									"name": "Start Jobp",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v2/Activities?name=TEST.RUN.FLOW.1dfgdfg&token=bomrer9nk10okope29p4udt9q2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v2",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "TEST.RUN.FLOW.1dfgdfg",
													"equals": true
												},
												{
													"key": "token",
													"value": "bomrer9nk10okope29p4udt9q2",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Prompts",
							"item": [
								{
									"name": "run - Activities - v1 - simple execution",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.2",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.2",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "check - prompts - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"returns prompt count\"] = jsonData.count >= 0;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/check/v1/prompts?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"check",
												"v1",
												"prompts"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "submit- prompts - v1 (Override)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5dc8be80-c551-4836-8097-f85cf02acda8",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"prompts\" : \r\n\t\t[\r\n     \t\t{\r\n\t\t\t\t\"name\": \"PRPT.AC.1\",\r\n     \t\t\t\"elements\": [\r\n        \t\t\t{\r\n          \t\t\t\t\"variable\": \"NEWLOGIN1#\",\r\n          \t\t\t\t\"value\": \"Bren\"\r\n        \t\t\t},\r\n        \t\t\t{\r\n          \t\t\t\t\"variable\": \"NEWPWD1#\",\r\n          \t\t\t\t\"value\": \"--108A48537B3C573668A70CFB1C77492C8A\"\r\n        \t\t\t}\r\n     \t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\t\t\t\t\"name\": \"PRPT.AC.2\",\r\n     \t\t\t\"elements\": [\r\n        \t\t\t{\r\n          \t\t\t\t\"variable\": \"COMBOVALUE1#\",\r\n          \t\t\t\t\"value\": \"Korn-Shell\"\r\n        \t\t\t}\r\n     \t\t\t]\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t]\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/submit/v1/prompts?runid=1098036&name=JOBS.AC.1&override=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"submit",
												"v1",
												"prompts"
											],
											"query": [
												{
													"key": "runid",
													"value": "1098036",
													"equals": true
												},
												{
													"key": "name",
													"value": "JOBS.AC.1",
													"equals": true
												},
												{
													"key": "override",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "submit- prompts - v1 (Override) Partial",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5dc8be80-c551-4836-8097-f85cf02acda8",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"prompts\" : \r\n\t\t[\r\n     \t\t{\r\n\t\t\t\t\"name\": \"PRPT.AC.1\",\r\n     \t\t\t\"elements\": [\r\n        \t\t\t{\r\n          \t\t\t\t\"variable\": \"NEWLOGIN1#\",\r\n          \t\t\t\t\"value\": \"Yli\"\r\n        \t\t\t},\r\n        \t\t\t{\r\n          \t\t\t\t\"variable\": \"NEWPWD1#\",\r\n          \t\t\t\t\"value\": \"MyNewPwd\"\r\n        \t\t\t}\r\n     \t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/submit/v1/prompts?runid=1098038&name=JOBS.AC.1&override=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"submit",
												"v1",
												"prompts"
											],
											"query": [
												{
													"key": "runid",
													"value": "1098038",
													"equals": true
												},
												{
													"key": "name",
													"value": "JOBS.AC.1",
													"equals": true
												},
												{
													"key": "override",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "submit- prompts - v1 (No Override)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5dc8be80-c551-4836-8097-f85cf02acda8",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/submit/v1/prompts?runid=1098040&name=JOBS.AC.1&override=N",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"submit",
												"v1",
												"prompts"
											],
											"query": [
												{
													"key": "runid",
													"value": "1098040",
													"equals": true
												},
												{
													"key": "name",
													"value": "JOBS.AC.1",
													"equals": true
												},
												{
													"key": "override",
													"value": "N",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Statistics",
							"item": [
								{
									"name": "search - Statistics - v1 - load test (fail)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"record number\"] = responseBody.has(\"too many records\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"max is 5000\"] = jsonData.max === \"5000\";"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Statistics - v1 - Filters with: name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics?filters=[name:REST*]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "filters",
													"value": "[name:REST*]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Statistics - v1 - Filters with: name, type and status",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics?filters=[type:JOBS,name:*CMD*,status:1900]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "filters",
													"value": "[type:JOBS,name:*CMD*,status:1900]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Statistics - v1 - Filters with: name, type and activation",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics?filters=[type:JOBS|JOBP,name:REST*,activation:LAST1YEAR]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "filters",
													"value": "[type:JOBS|JOBP,name:REST*,activation:LAST1YEAR]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Statistics - v1 - Filters with: name, type and start",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics?filters=[type:JOBS|JOBP,name:REST*,start:LAST1YEAR]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "filters",
													"value": "[type:JOBS|JOBP,name:REST*,start:LAST1YEAR]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Statistics - v1 - Filters with: name, type and end",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics?filters=[type:JOBS|JOBP,name:REST*,end:LAST1YEAR]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "filters",
													"value": "[type:JOBS|JOBP,name:REST*,end:LAST1YEAR]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "nooperation - Statistics - v1 - no param",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Status is returned\"] = responseBody.has(\"status\");",
													"tests[\"Status is error\"] = responseBody.has(\"error\");",
													"tests[\"function not found\"] = responseBody.has(\"error occured\");"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/nooperation/v1/Statistics",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"nooperation",
												"v1",
												"Statistics"
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Statistics - v1 - Filters with: name and status",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics?filters=[name:REST*,status:1900]",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "filters",
													"value": "[name:REST*,status:1900]",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "get - Statistics - v1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/get/v1/Statistics?name=REST.AUTO.RUNNABLE.JOBS.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"get",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "getpriv - Users - v1 ",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/checkpriv/v1/Users?name=ARA/ARA",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"checkpriv",
												"v1",
												"Users"
											],
											"query": [
												{
													"key": "name",
													"value": "ARA/ARA",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "getperm - Users - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/checkperm/v1/Users?name=REST.AUTO.RUNNABLE.JOBS.1&type=JOBS&right=R",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"checkperm",
												"v1",
												"Users"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.1",
													"equals": true
												},
												{
													"key": "type",
													"value": "JOBS",
													"equals": true
												},
												{
													"key": "right",
													"value": "R",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "list - Users - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"object name is OK\"] = responseBody.has(\"name\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"records are found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/list/v1/Users",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"list",
												"v1",
												"Users"
											]
										}
									},
									"response": []
								},
								{
									"name": "disconnect - Users - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"disconnect request OK\"] = responseBody.has(\"Disconnect\");",
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/disconnect/v1/Users?name=PROD/PROD",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"disconnect",
												"v1",
												"Users"
											],
											"query": [
												{
													"key": "name",
													"value": "PROD/PROD",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Queues",
							"description": "",
							"item": [
								{
									"name": "list - Queues - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4dc76c51-d8b1-4510-af25-98388f5e0242",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:9394/{{APPNAME}}/api/awa/list/v1/Queues",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "9394",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"list",
												"v1",
												"Queues"
											]
										}
									},
									"response": []
								},
								{
									"name": "list - Queues - v1 (Usage)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4dc76c51-d8b1-4510-af25-98388f5e0242",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:9394/{{APPNAME}}/api/awa/list/v1/Queues?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "9394",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"list",
												"v1",
												"Queues"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "list - Queues - v1 (addl details)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4dc76c51-d8b1-4510-af25-98388f5e0242",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/list/v1/Queues?additional=true",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"list",
												"v1",
												"Queues"
											],
											"query": [
												{
													"key": "additional",
													"value": "true",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "stop - Queues - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4dc76c51-d8b1-4510-af25-98388f5e0242",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/stop/v1/Queues?name=QUEUE.TST.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"stop",
												"v1",
												"Queues"
											],
											"query": [
												{
													"key": "name",
													"value": "QUEUE.TST.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "start - Queues - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4dc76c51-d8b1-4510-af25-98388f5e0242",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/start/v1/Queues?name=QUEUE.TST.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"start",
												"v1",
												"Queues"
											],
											"query": [
												{
													"key": "name",
													"value": "QUEUE.TST.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "change Attributes - Queues - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4dc76c51-d8b1-4510-af25-98388f5e0242",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"maxslots\":200,\r\n\t\"priority\":012,\r\n\t\"title\":\"my new title\",\r\n\t\"considerERT\":true,\r\n\t\"arch1\":\"key 1\",\r\n\t\"arch2\":\"key 2\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Queues?name=QUEUE.TST.1&commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Queues"
											],
											"query": [
												{
													"key": "name",
													"value": "QUEUE.TST.1",
													"equals": true
												},
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "change Attributes - Queues - v1 (only maxslot)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4dc76c51-d8b1-4510-af25-98388f5e0242",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"maxslots\":101\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Queues?name=QUEUE.TST.1&commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Queues"
											],
											"query": [
												{
													"key": "name",
													"value": "QUEUE.TST.1",
													"equals": true
												},
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "POST Functional Tests",
					"item": [
						{
							"name": "All",
							"item": [
								{
									"name": "delete - All - v1 - usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"std_filters\"] = responseBody.has(\"std_filters\");",
													"tests[\"spec_filters\"] = responseBody.has(\"spec_filters\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Comments",
							"item": [
								{
									"name": "run - Activities - v1 - simple execution (setup)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"has runid\"] = responseBody.has(\"runid\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"runid is not 0\"] = jsonData.runid > 0;",
													"",
													"postman.setGlobalVariable(\"RUNID\", jsonData.runid);"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?name=REST.AUTO.RUNNABLE.JOBS.1",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "name",
													"value": "REST.AUTO.RUNNABLE.JOBS.1",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "add - Comment - v1 - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"JSON is returned\"] = responseBody.has(\"comment\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Your test name\"] = jsonData.comment === \"here is a comment to add.\";"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"hello!\"\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/comment/v1/Activities?runid=1365161&method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"comment",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "1365161",
													"equals": true
												},
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "add - Comment - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"comment was added\"] = responseBody.has(\"added\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"comment\": \"hello!\"\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/comment/v1/Activities?runid={{RUNID}}",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"comment",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "runid",
													"value": "{{RUNID}}",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Jobp",
							"item": [
								{
									"name": "create - Jobp - v1 - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBP\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"WF.TEST.10\",\r\n  \"title\" : \"Workflow Test\",\r\n  \"key1\" : \"\",\r\n  \"key2\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"active\",\r\n  \"genatruntime\" : \"true\",\r\n  \"process\" : \"\",\r\n  \"tasks\" :\r\n    [\r\n      {\r\n        \"name\":\"WF.TASK.1\",\r\n        \"x\":2,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"START\",\r\n            \"tasknum\": 1,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"WF.TASK.2\",\r\n        \"x\":3,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n        {\r\n        \"name\":\"WF.TASK.3\",\r\n        \"x\":4,\r\n        \"y\":2,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"END\",\r\n        \"x\":5,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.2\",\r\n            \"tasknum\": 4,\r\n            \"status\": \"ANY_OK\"\r\n          },\r\n          {\r\n            \"name\": \"WF.TASK.3\",\r\n            \"tasknum\": 5,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      }  \r\n    ]  \r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobp?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobp - v1 - no commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBP\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"WF.TEST.10\",\r\n  \"title\" : \"Workflow Test\",\r\n  \"key1\" : \"\",\r\n  \"key2\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"active\",\r\n  \"genatruntime\" : \"true\",\r\n  \"process\" : \"\",\r\n  \"tasks\" :\r\n    [\r\n      {\r\n        \"name\":\"WF.TASK.1\",\r\n        \"x\":2,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"START\",\r\n            \"tasknum\": 1,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"WF.TASK.2\",\r\n        \"x\":3,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n        {\r\n        \"name\":\"WF.TASK.3\",\r\n        \"x\":4,\r\n        \"y\":2,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"END\",\r\n        \"x\":5,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.2\",\r\n            \"tasknum\": 4,\r\n            \"status\": \"ANY_OK\"\r\n          },\r\n          {\r\n            \"name\": \"WF.TASK.3\",\r\n            \"tasknum\": 5,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      }  \r\n    ]  \r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobp?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobp - v1 - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\" : \"TEST.WF.1\",\r\n  \"title\" : \".+,Automic World 2016 Demo Workflow\",\r\n  \"key1\" : \"\",\r\n  \"key2\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"active\",\r\n  \"genatruntime\" : \"true\",\r\n  \"process\" : \"\",\r\n  \"tasks\" :\r\n    [\r\n      {\r\n        \"name\":\"AW16.JOB.01\",\r\n        \"x\":2,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"START\",\r\n            \"tasknum\": 1,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"AW16.JOB.02\",\r\n        \"x\":2,\r\n        \"y\":2,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"AW16.JOB.01\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"END\",\r\n        \"x\":5,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"AW16.JOB.02\",\r\n            \"tasknum\": 4,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      }  \r\n    ]  \r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobp?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobp - v1 - commit (add breakpoint)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\" : \"TEST.RUN.FLOW.1\",\r\n  \"breakpoint\" : true,\r\n  \"genatruntime\": true\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobp?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobp - v1 - commit (delete breakpoint)",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\" : \"TEST.RUN.FLOW.1\",\r\n  \"breakpoint\" : false,\r\n  \"genatruntime\": true\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobp?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Jobs",
							"description": "Jobs\n",
							"item": [
								{
									"name": "update - Jobs - v1 - usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"std_filters\"] = responseBody.has(\"std_filters\");",
													"tests[\"updates\"] = responseBody.has(\"updates\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete - Jobs - v1 - usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"std_filters\"] = responseBody.has(\"std_filters\");",
													"tests[\"spec_filters\"] = responseBody.has(\"spec_filters\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns type\"] = responseBody.has(\"type\");",
													"tests[\"returns folder\"] = responseBody.has(\"folder\");",
													"tests[\"returns name\"] = responseBody.has(\"name\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs - v1 - update status only - no commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													"//tests[\"Object is active\"] = jsonData.data[0].active === true;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"spec_filters\": {\n    \"active\": true,\n    \"inactive\": true,\n    \"postprocess\": \"(.*|\\n)*\",\n    \"preprocess\": \"(.*|\\n)*\",\n    \"process\": \"(.*|\\n)*\"\n  },\n  \"std_filters\": {\n    \"name\": \"*AUTO.RUNNABLE*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n    \"status\": \"inactive\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs - v1 - update status only - no commit & missing spec filters",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"std_filters\": {\n    \"name\": \"REST.AUTO.TESTS.JOBS.1*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n    \"status\": \"inactive\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs - v1 - incorrect JSON body",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"incorrect format is reported\"] = responseBody.has(\"incorrect format\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"std_filters\": {\n    \"name\": \"REST.AUTO.TESTS.JOBS.1*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n    \"status\": \"inactive\"\n    sdfg: false\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs - v1 - update status only (deactivate) - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													"tests[\"Object is not active\"] = jsonData.data[0].active === false;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"spec_filters\": {\n    \"active\": true,\n    \"inactive\": true,\n    \"postprocess\": \"(.*|\\n)*\",\n    \"preprocess\": \"(.*|\\n)*\",\n    \"process\": \"(.*|\\n)*\"\n  },\n  \"std_filters\": {\n    \"name\": \"REST.AUTO.TESTS.JOBS.1*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n    \"status\": \"inactive\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs - v1 - update status only (activate) - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													"tests[\"Object is not active\"] = jsonData.data[0].active === true;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"spec_filters\": {\n    \"active\": true,\n    \"inactive\": true,\n    \"postprocess\": \"(.*|\\n)*\",\n    \"preprocess\": \"(.*|\\n)*\",\n    \"process\": \"(.*|\\n)*\"\n  },\n  \"std_filters\": {\n    \"name\": \"REST.AUTO.TESTS.JOBS.1*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n    \"status\": \"active\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs - v1 - update several things - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"title is updated\"] = responseBody.has(\"NEWTITLE\");",
													"tests[\"key1 is updated\"] = responseBody.has(\"NEWKEY1\");",
													"tests[\"key2 is updated\"] = responseBody.has(\"NEWKEY2\");",
													"tests[\"host is updated\"] = responseBody.has(\"NEWHOST\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"spec_filters\": {\n    \"active\": true,\n    \"inactive\": true,\n    \"postprocess\": \"(.*|\\n)*\",\n    \"preprocess\": \"(.*|\\n)*\",\n    \"process\": \"(.*|\\n)*\"\n  },\n  \"std_filters\": {\n    \"name\": \"POC.JOBS.1*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n    \"status\": \"inactive\",\n    \"title\" : \".*,NEWTITLE\",\n    \"key1\" : \".+,NEWKEY1\",\n    \"key2\" : \".+,NEWKEY2\",\n    \"host\" : \".+,NEWHOST\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs (RA) - v1 - update - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"title is updated\"] = responseBody.has(\"NEWTITLE\");",
													"tests[\"key1 is updated\"] = responseBody.has(\"NEWKEY1\");",
													"tests[\"key2 is updated\"] = responseBody.has(\"NEWKEY2\");",
													"tests[\"host is updated\"] = responseBody.has(\"NEWHOST\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"spec_filters\": {\n    \"active\": true,\n    \"inactive\": true,\n    \"postprocess\": \"(.*|\\n)*\",\n    \"preprocess\": \"(.*|\\n)*\",\n    \"process\": \"(.*|\\n)*\"\n  },\n  \"std_filters\": {\n    \"name\": \"MY.REST.JOB.1*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n\t\"ra_values\" :\n    [\n     {\"uriOverride\":\"http://TGIFriday.com\"},\n     {\"requestReports\":\"false\"},\n     {\"responseToJobLog\":\"false\"}\n    ]\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "update - Jobs - v1 - update several things (revert) - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"tests[\"title is updated\"] = responseBody.has(\"OLDTITLE\");",
													"tests[\"key1 is updated\"] = responseBody.has(\"OLDKEY1\");",
													"tests[\"key2 is updated\"] = responseBody.has(\"OLDKEY2\");",
													"tests[\"host is updated\"] = responseBody.has(\"OLDHOST\");",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"spec_filters\": {\n    \"active\": true,\n    \"inactive\": true,\n    \"postprocess\": \"(.*|\\n)*\",\n    \"preprocess\": \"(.*|\\n)*\",\n    \"process\": \"(.*|\\n)*\"\n  },\n  \"std_filters\": {\n    \"name\": \"REST.AUTO.TESTS.JOBS.1*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  },\n  \"updates\": {\n    \"status\": \"active\",\n    \"title\" : \".+,OLDTITLE\",\n    \"key1\" : \".+,OLDKEY1\",\n    \"key2\" : \".+,OLDKEY2\",\n    \"host\" : \".+,OLDHOST\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/update/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"update",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete - Jobs - v1 - no commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Object Count\"] = jsonData.count > 0;",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"spec_filters\": {\n    \"active\": \"true\",\n    \"inactive\": \"true\",\n  },\n  \"std_filters\": {\n    \"date_from\": \"201601010000\",\n    \"date_search\": true,\n    \"date_search_type\": \"created\",\n    \"date_to\": \"202412312359\",\n    \"include_links\": true,\n    \"name\": \"REST.AUTO*\",\n    \"search_for_usage\": false,\n    \"search_text\": false,\n    \"search_text_docu\": false,\n    \"search_text_key\": false,\n    \"search_text_process\": false,\n    \"search_text_title\": false,\n    \"text\": \"*\"\n  }\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - no commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"simulated successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"name\" : \"MY.AUTO.CREATED.JOB.1\",\r\n  \"title\" : \"My Title\",\r\n  \"key1\" : \"Key 1\",\r\n  \"key2\" : \"Key 2\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"active\",\r\n  \"genatruntime\" : \"true\",\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"\",\r\n  \"postprocess\" : \"\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs (WIN) - v1 - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS.WIN\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"POC.JOBS.1\",\r\n  \"title\" : \"my Job Title\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"active\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo \\\"running!\\\"\\nping 127.0.0.1\\necho \\\"job done!\\\"\",\r\n  \"preprocess\" : \"echo preprocess here\\nping 127.0.0.1\",\r\n  \"postprocess\" : \"echo post process here\"\r\n  \r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										},
										"description": null
									},
									"response": []
								},
								{
									"name": "create - Jobs SQL (DB Name and Server) - v1 - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS.SQL\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"MY.AUTO.CREATED.SQL.JOB.5\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"\",\r\n  \"login\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"db_dbname\":\"MyDb\",\r\n  \"db_servername\":\"SQLServer:1433\"\r\n\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs SQL (CONN) - v1 - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS.SQL\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"MY.SQL.JOB.1\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"\",\r\n  \"login\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"db_connname\": \"MyConn\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs RA (Restv4) - v1",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS.WEBSERVICEREST.REST\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"MY.REST.JOB.1\",\r\n  \"title\" : \"My job Title\",\r\n  \"host\" : \"\",\r\n  \"login\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"ra_values\" :\r\n    [\r\n     {\"uriOverride\":\"http://HelloDKandMarc.com\"},\r\n     {\"requestReports\":\"true\"},\r\n     {\"responseToJobLog\":\"true\"}\r\n    ]\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - missing Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"name\" : \"MY.AUTO.CREATED.JOB.2\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - wrong Folder",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"name\" : \"MY.AUTO.CREATED.JOB.2\",\r\n  \"folder\" : \"0100/NOT.A.FOLDER\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - missing Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - invalid Object Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"name\" : \"ILLEGAL\\/%CHARS.JOBS\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - invalid Host Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"name\" : \"REST.AUTO.INVALID.TESTS.1\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01%HOST\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete - Jobs - v1 - delete jobs created",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"returs success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"more than 0 Object deleted\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"std_filters\":\r\n  {\r\n    \"name\" : \"REST.AUTO.INVALID.TESTS.1\",\r\n    \"include_links\" : false,\r\n    \"search_for_usage\" : false\r\n  }\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - invalid Login Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"name\" : \"REST.AUTO.INVALID.TESTS.1\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL%LOGIN\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete - Jobs - v1 - delete jobs created",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"returs success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"more than 0 Object deleted\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"std_filters\":\r\n  {\r\n    \"name\" : \"REST.AUTO.INVALID.TESTS.1\",\r\n    \"include_links\" : false,\r\n    \"search_for_usage\" : false\r\n  }\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "delete - Jobs - v1 - incorrect JSON body",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"incorrect format is reported\"] = responseBody.has(\"incorrect format\");"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"std_filters\":\r\n  {\r\n    \"name\" : \"MY.AUTO.CREATED.*\"\r\n    \"include_links\" : false,\r\n    dssfgdfg: false\r\n    \"search_for_usage\" : false\r\n  }\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - invalid Queue Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WIN\",\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"name\" : \"REST.AUTO.INVALID.TESTS.1\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE%QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete - Jobs - v1 - delete jobs created",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"returs success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"more than 0 Object deleted\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"std_filters\":\r\n  {\r\n    \"name\" : \"REST.AUTO.INVALID.TESTS.1\",\r\n    \"include_links\" : false,\r\n    \"search_for_usage\" : false\r\n  }\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - missing Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"name\" : \"MY.AUTO.CREATED.JOB.2\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobs - v1 - commit 2 - wrong Type",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is error\"] = responseBody.has(\"error\");",
													"tests[\"missing field reported\"] = responseBody.has(\"message\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBS_WINSFDSG\",\r\n  \"folder\" : \"0100/REST.API.TESTS\",\r\n  \"name\" : \"MY.AUTO.CREATED.JOB.2\",\r\n  \"title\" : \"\",\r\n  \"host\" : \"WIN01\",\r\n  \"login\" : \"LOGIN.GENERAL\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"inactive\",\r\n  \"genatruntime\" : true,\r\n  \"process\" : \"echo running!\",\r\n  \"preprocess\" : \"echo preprocess here\",\r\n  \"postprocess\" : \"echo post process here\"\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "delete - Jobs - v1 - delete jobs created",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"returs success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"more than 0 Object deleted\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"std_filters\":\r\n  {\r\n    \"name\" : \"MY.AUTO.CREATED.*\",\r\n    \"include_links\" : false,\r\n    \"search_for_usage\" : false\r\n  }\r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/delete/v1/Jobs?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"delete",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobp - v1 - commit",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBP\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"WF.TEST.10\",\r\n  \"title\" : \"Workflow Test\",\r\n  \"key1\" : \"\",\r\n  \"key2\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"active\",\r\n  \"genatruntime\" : \"true\",\r\n  \"process\" : \"\",\r\n  \"tasks\" :\r\n    [\r\n      {\r\n        \"name\":\"WF.TASK.1\",\r\n        \"x\":2,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"START\",\r\n            \"tasknum\": 1,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"WF.TASK.2\",\r\n        \"x\":3,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n        {\r\n        \"name\":\"WF.TASK.3\",\r\n        \"x\":4,\r\n        \"y\":2,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"END\",\r\n        \"x\":5,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.2\",\r\n            \"tasknum\": 4,\r\n            \"status\": \"ANY_OK\"\r\n          },\r\n          {\r\n            \"name\": \"WF.TASK.3\",\r\n            \"tasknum\": 5,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      }  \r\n    ]  \r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobp?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "create - Jobp - v1 - commit - wrong",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"status is returned\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"job was created\"] = responseBody.has(\"created successfully\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"type\" : \"JOBP\",\r\n  \"folder\" : \"0100/LAB\",\r\n  \"name\" : \"WF.TEST.10\",\r\n  \"title\" : \"Workflow Test\",\r\n  \"key1\" : \"\",\r\n  \"key2\" : \"\",\r\n  \"queue\" : \"CLIENT_QUEUE\",\r\n  \"status\" : \"active\",\r\n  \"genatruntime\" : \"true\",\r\n  \"process\" : \"\",\r\n  \"tasks\" :\r\n    [\r\n      {\r\n        \"name\":\"WF.TASK.1\",\r\n        \"x\":2,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"START\",\r\n            \"tasknum\": 1,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"WF.TASK.2\",\r\n        \"x\":3,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n        {\r\n        \"name\":\"WF.TASK.3\",\r\n        \"x\":4,\r\n        \"y\":2,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.1\",\r\n            \"tasknum\": 3,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"name\":\"END\",\r\n        \"x\":5,\r\n        \"y\":1,\r\n        \"predecessors\":\r\n        [\r\n          {\r\n            \"name\": \"WF.TASK.2\",\r\n            \"tasknum\": 4,\r\n            \"status\": \"ANY_OK\"\r\n          },\r\n          {\r\n            \"name\": \"WF.TASK.3\",\r\n            \"tasknum\": 5,\r\n            \"status\": \"ANY_OK\"\r\n          }\r\n        ]\r\n      }  \r\n    ]  \r\n}"
										},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/create/v1/Jobp?commit=Y",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"create",
												"v1",
												"Jobp"
											],
											"query": [
												{
													"key": "commit",
													"value": "Y",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "AWA Usage Tests",
					"item": [
						{
							"name": "help",
							"item": [
								{
									"name": "help - NoObject",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"No Object help returns 404\"] = responseCode.code === 404;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/NoObj",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"NoObj"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - Changes",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/Changes",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"Changes"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - All",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/All",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"All"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - Activities",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/Activities",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"Activities"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - Statistics",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/Statistics",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"Statistics"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - Jobs",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - Jobs",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"methods found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/Jobs",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"Jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - Engine",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/Client",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"Client"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - Client",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/Client",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"Client"
											]
										}
									},
									"response": []
								},
								{
									"name": "help - All",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"methods found\"] = jsonData.count > 0;"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/help/v1/All",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"help",
												"v1",
												"All"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "usage",
							"item": [
								{
									"name": "search - All - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/All?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"All"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Jobs - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Jobs?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Jobs"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "deactivate - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/deactivate/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"deactivate",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "rerun - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/rerun/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"rerun",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "quit - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/quit/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"quit",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "unblock - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/unblock/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"unblock",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "cancel - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/cancel/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"cancel",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "resume - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/resume/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"resume",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "rollback - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/rollback/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"rollback",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "suspend - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/suspend/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"suspend",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "resume - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/show/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"show",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "run - Activities - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/run/v1/Activities?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"run",
												"v1",
												"Activities"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "stop - Client - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/stop/v1/Client?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"stop",
												"v1",
												"Client"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "go - Client - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/go/v1/Client?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"go",
												"v1",
												"Client"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "display - Engine - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/display/v1/Engine?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"display",
												"v1",
												"Engine"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "search - Statistics - Usage",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"returns status\"] = responseBody.has(\"status\");",
													"tests[\"status is success\"] = responseBody.has(\"success\");",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Token",
												"value": "{{TOKEN}}"
											}
										],
										"body": {},
										"url": {
											"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/search/v1/Statistics?method=usage",
											"protocol": "http",
											"host": [
												"{{HOSTNAME}}"
											],
											"port": "{{PORT}}",
											"path": [
												"{{APPNAME}}",
												"api",
												"awa",
												"search",
												"v1",
												"Statistics"
											],
											"query": [
												{
													"key": "method",
													"value": "usage",
													"equals": true
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "AWA Objects Display",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"has status\"] = responseBody.has(\"status\");",
											"tests[\"has success\"] = responseBody.has(\"success\");",
											"",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Your test name\"] = jsonData.count > 0;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Token",
										"value": "{{TOKEN}}"
									}
								],
								"body": {},
								"url": {
									"raw": "http://{{HOSTNAME}}:{{PORT}}/{{APPNAME}}/api/awa/objects",
									"protocol": "http",
									"host": [
										"{{HOSTNAME}}"
									],
									"port": "{{PORT}}",
									"path": [
										"{{APPNAME}}",
										"api",
										"awa",
										"objects"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}